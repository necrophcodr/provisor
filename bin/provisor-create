#!/bin/bash
set -e

exec 200>"/dev/shm/make_user.flock"
flock -x 200

trap cleanup EXIT

# Maybe flocking this script will help prevent some racing

# 1. Create a new user
# 2. Input the SSH Key for said user into the authorized keys file
# 3. Set users quota

THEUSER=$1
KEYTEXT=$2
ERROR=""
echo ${KEYTEXT}

TMPKEY=$(/bin/mktemp "/tmp/tmpkey.XXXXXXXX")

function cleanup
{
  ## Try to roll back on an error
  if [ -z "${ERROR}" -a -n "${THEUSER}" ]; then
    /usr/bin/getent passwd "${THEUSER}" >"/dev/null" && /usr/sbin/deluser "${THEUSER}"
  fi

  if [ -n "${TMPKEY}" -a -f "${TMPKEY}" ]; then
    rm -f "${TMPKEY}"
  fi
}

if [ "$#" -ne 2 ]; then
  if [ -z "$1" ]; then echo "Error: Missing Username"; fi
  if [ -z "$2" ]; then echo "Error: Missing Public Key"; fi
  exit 1
fi

## Validate the given username
if ! [[ ${THEUSER} =~ ^[a-zA-Z0-9_]{4,48}$ ]]; then
  echo "Invalid username" >&2
  exit 2
fi

## Dump the key file somewhere safe
echo "${KEYTEXT}" >"${TMPKEY}"

if [[ "${KEYTEXT:0:7}" != "ssh-rsa" && "${KEYTEXT:0:7}" != "ssh-dsa" ]]; then
	echo "Key type must be ssh-rsa or ssh-dsa" >&2
	exit 3
fi

ssh-keygen -l -f "${TMPKEY}"

if [ $? -ne 0 ]; then
	echo "Invalid key!" >&2
	exit 1
fi

## Determine if the user already exists.
if [ -d "/home/${THEUSER}" ]; then
  echo "This user already exists" >&2
  ERROR="no"
  exit 1
fi

## Create the user
echo "Creating User: ${THEUSER}"
/usr/sbin/useradd -G "users" -m "${THEUSER}" -s "/bin/bash"

## Move the key into the users ssh authorized keys. Note move is important to prevent a race.
/bin/chown "${THEUSER}:users" "${TMPKEY}"
/bin/chmod "600" "${TMPKEY}" 
/bin/mv "${TMPKEY}" "/home/${THEUSER}/.ssh/authorized_keys"

## Set the users quota.
/usr/sbin/setquota -u "${THEUSER}" "976563" "1220703" "0" "0" -a "/dev/vda1"

ERROR="no"
exit 0
